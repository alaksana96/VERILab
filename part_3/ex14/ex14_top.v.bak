module ex14_top(CLOCK_50, SW, DAC_CS, DAC_SDI, DAC_LD, DAC_SCK, PWM_OUT, HEX0, HEX1, HEX2);

	input					CLOCK_50;
	input		[9:0]		SW;
	
	output				DAC_CS;
	output				DAC_SDI;
	output				DAC_LD;
	output				DAC_SCK;
	output				PWM_OUT;
	
	output	[6:0] 	HEX0;
	output	[6:0]		HEX1;
	output	[6:0]		HEX2;
	
	wire 					tick;
	
	wire unsigned		[9:0]		OffsetAndA;
	
	reg unsigned		[9:0]		A;
	reg 		[9:0]		D;
	
	clkdiv50	clockdiv(CLOCK_50, 1, 5000, tick);
	
	always @ (posedge tick) //Creating the Addr Reg, clocked by tick
			A[9:0] <= OffsetAndA[9:0];
	
	
	assign OffsetAndA = SW[9:0] + A[9:0];
	
	ROM r(A[9:0], tick, D[9:0]);
	
	spi2dac sp (CLOCK_50, D[9:0], tick, DAC_SDI, DAC_CS, DAC_SCK, DAC_LD);
	
	pwm p (CLOCK_50, D[9:0], tick, PWM_OUT);
	
endmodule